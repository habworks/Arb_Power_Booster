/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen_set_screen/Screen_SetViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen_SetViewBase::Screen_SetViewBase() :
    flexButtonCallback(this, &Screen_SetViewBase::flexButtonCallbackHandler),
    radioButtonSelectedCallback(this, &Screen_SetViewBase::radioButtonSelectedCallbackHandler),
    radioButtonDeselectedCallback(this, &Screen_SetViewBase::radioButtonDeselectedCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BACKGROUNDS_480X272_WAVY_LINES_ID));
    add(image1);

    textArea_ResetMinMax.setXY(83, 220);
    textArea_ResetMinMax.setColor(touchgfx::Color::getColorFromRGB(212, 199, 25));
    textArea_ResetMinMax.setLinespacing(0);
    textArea_ResetMinMax.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LHCN));
    add(textArea_ResetMinMax);

    flexButton_ResetMinMax.setBoxWithBorderPosition(0, 0, 60, 60);
    flexButton_ResetMinMax.setBorderSize(5);
    flexButton_ResetMinMax.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton_ResetMinMax.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_REFRESH_50_50_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    flexButton_ResetMinMax.setIconXY(6, 5);
    flexButton_ResetMinMax.setAction(flexButtonCallback);
    flexButton_ResetMinMax.setPosition(13, 202, 60, 60);
    add(flexButton_ResetMinMax);

    flexButton_Home.setBoxWithBorderPosition(0, 0, 60, 60);
    flexButton_Home.setBorderSize(5);
    flexButton_Home.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton_Home.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_HOME_50_50_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    flexButton_Home.setIconXY(6, 5);
    flexButton_Home.setAction(flexButtonCallback);
    flexButton_Home.setPosition(406, 202, 60, 60);
    add(flexButton_Home);

    textArea_EnableLimit.setXY(83, 143);
    textArea_EnableLimit.setColor(touchgfx::Color::getColorFromRGB(212, 199, 25));
    textArea_EnableLimit.setLinespacing(0);
    textArea_EnableLimit.setTypedText(touchgfx::TypedText(T___SINGLEUSE_C9E9));
    add(textArea_EnableLimit);

    textArea_Units.setXY(262, 70);
    textArea_Units.setColor(touchgfx::Color::getColorFromRGB(212, 199, 25));
    textArea_Units.setLinespacing(0);
    textArea_Units.setTypedText(touchgfx::TypedText(T___SINGLEUSE_09DY));
    add(textArea_Units);

    radioButtonGroup1.setRadioButtonSelectedHandler(radioButtonSelectedCallback);
    
    radioButtonGroup1.setRadioButtonDeselectedHandler(radioButtonDeselectedCallback);
    
    radioButton_EnableLimit.setXY(25, 140);
    radioButton_EnableLimit.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_MEDIUM_ROUNDED_ON_ACTIVE_ID), touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_RADIOBUTTON_CHECK_MEDIUM_ROUNDED_ON_PRESSED_ID));
    radioButton_EnableLimit.setSelected(true);
    radioButton_EnableLimit.setDeselectionEnabled(true);
    radioButtonGroup1.add(radioButton_EnableLimit);
    add(radioButton_EnableLimit);

    textArea_DecimalPoint.setXY(143, 70);
    textArea_DecimalPoint.setColor(touchgfx::Color::getColorFromRGB(212, 199, 25));
    textArea_DecimalPoint.setLinespacing(0);
    textArea_DecimalPoint.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VEF3));
    add(textArea_DecimalPoint);

    flexButton_AmpsDigit_3.setBoxWithBorderPosition(0, 0, 31, 39);
    flexButton_AmpsDigit_3.setBorderSize(0);
    flexButton_AmpsDigit_3.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton_AmpsDigit_3.setAlpha(0);
    flexButton_AmpsDigit_3.setAction(flexButtonCallback);
    flexButton_AmpsDigit_3.setPosition(220, 97, 31, 39);
    add(flexButton_AmpsDigit_3);

    textArea_AmpsDigit_3.setPosition(220, 70, 31, 73);
    textArea_AmpsDigit_3.setColor(touchgfx::Color::getColorFromRGB(212, 199, 25));
    textArea_AmpsDigit_3.setLinespacing(0);
    Unicode::snprintf(textArea_AmpsDigit_3Buffer, TEXTAREA_AMPSDIGIT_3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4UZC).getText());
    textArea_AmpsDigit_3.setWildcard(textArea_AmpsDigit_3Buffer);
    textArea_AmpsDigit_3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CVX8));
    add(textArea_AmpsDigit_3);

    flexButton_AmpsDigit_2.setBoxWithBorderPosition(0, 0, 31, 39);
    flexButton_AmpsDigit_2.setBorderSize(0);
    flexButton_AmpsDigit_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton_AmpsDigit_2.setAlpha(0);
    flexButton_AmpsDigit_2.setAction(flexButtonCallback);
    flexButton_AmpsDigit_2.setPosition(189, 97, 31, 39);
    add(flexButton_AmpsDigit_2);

    textArea_AmpsDigit_2.setXY(189, 70);
    textArea_AmpsDigit_2.setColor(touchgfx::Color::getColorFromRGB(212, 199, 25));
    textArea_AmpsDigit_2.setLinespacing(0);
    Unicode::snprintf(textArea_AmpsDigit_2Buffer, TEXTAREA_AMPSDIGIT_2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_X013).getText());
    textArea_AmpsDigit_2.setWildcard(textArea_AmpsDigit_2Buffer);
    textArea_AmpsDigit_2.resizeToCurrentText();
    textArea_AmpsDigit_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HJDJ));
    add(textArea_AmpsDigit_2);

    flexButton_AmpsDigit_1.setBoxWithBorderPosition(0, 0, 31, 39);
    flexButton_AmpsDigit_1.setBorderSize(0);
    flexButton_AmpsDigit_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton_AmpsDigit_1.setAlpha(0);
    flexButton_AmpsDigit_1.setAction(flexButtonCallback);
    flexButton_AmpsDigit_1.setPosition(158, 97, 31, 39);
    add(flexButton_AmpsDigit_1);

    textArea_AmpsDigit_1.setXY(158, 70);
    textArea_AmpsDigit_1.setColor(touchgfx::Color::getColorFromRGB(212, 199, 25));
    textArea_AmpsDigit_1.setLinespacing(0);
    Unicode::snprintf(textArea_AmpsDigit_1Buffer, TEXTAREA_AMPSDIGIT_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KT6N).getText());
    textArea_AmpsDigit_1.setWildcard(textArea_AmpsDigit_1Buffer);
    textArea_AmpsDigit_1.resizeToCurrentText();
    textArea_AmpsDigit_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZV9R));
    add(textArea_AmpsDigit_1);

    flexButton_AmpsDigit_0.setBoxWithBorderPosition(0, 0, 77, 39);
    flexButton_AmpsDigit_0.setBorderSize(0);
    flexButton_AmpsDigit_0.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton_AmpsDigit_0.setAction(flexButtonCallback);
    flexButton_AmpsDigit_0.setPosition(66, 97, 77, 39);
    add(flexButton_AmpsDigit_0);

    textArea_AmpsDigit_0.setXY(63, 70);
    textArea_AmpsDigit_0.setColor(touchgfx::Color::getColorFromRGB(212, 199, 25));
    textArea_AmpsDigit_0.setLinespacing(0);
    Unicode::snprintf(textArea_AmpsDigit_0Buffer, TEXTAREA_AMPSDIGIT_0_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_FV3Z).getText());
    textArea_AmpsDigit_0.setWildcard(textArea_AmpsDigit_0Buffer);
    textArea_AmpsDigit_0.resizeToCurrentText();
    textArea_AmpsDigit_0.setTypedText(touchgfx::TypedText(T___SINGLEUSE_48L8));
    add(textArea_AmpsDigit_0);

    textArea_CH_ToSet.setXY(7, 35);
    textArea_CH_ToSet.setColor(touchgfx::Color::getColorFromRGB(212, 199, 25));
    textArea_CH_ToSet.setLinespacing(0);
    textArea_CH_ToSet.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XMC2));
    add(textArea_CH_ToSet);

    flexButton_DigitDown.setBoxWithBorderPosition(0, 0, 60, 60);
    flexButton_DigitDown.setBorderSize(5);
    flexButton_DigitDown.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton_DigitDown.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_DOWN_80_80_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_DOWN_80_80_E8F6FB_SVG_ID));
    flexButton_DigitDown.setIconXY(-9, -8);
    flexButton_DigitDown.setAction(flexButtonCallback);
    flexButton_DigitDown.setPosition(406, 128, 60, 60);
    add(flexButton_DigitDown);

    flexButton_DigitUp.setBoxWithBorderPosition(0, 0, 60, 60);
    flexButton_DigitUp.setBorderSize(5);
    flexButton_DigitUp.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButton_DigitUp.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_UP_80_80_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DROP_UP_80_80_E8F6FB_SVG_ID));
    flexButton_DigitUp.setIconXY(-8, -8);
    flexButton_DigitUp.setAction(flexButtonCallback);
    flexButton_DigitUp.setPosition(406, 58, 60, 60);
    add(flexButton_DigitUp);

    textArea_TitleSet.setXY(7, -10);
    textArea_TitleSet.setColor(touchgfx::Color::getColorFromRGB(171, 20, 25));
    textArea_TitleSet.setLinespacing(0);
    textArea_TitleSet.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D9EX));
    add(textArea_TitleSet);
}

Screen_SetViewBase::~Screen_SetViewBase()
{

}

void Screen_SetViewBase::setupScreen()
{
    transitionBegins();
}

void Screen_SetViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton_Home)
    {
        //Interaction_MainTransistion
        //When flexButton_Home clicked change screen to Screen_Main
        //Go to Screen_Main with screen transition towards West
        application().gotoScreen_MainScreenSlideTransitionWest();
    }
    if (&src == &flexButton_AmpsDigit_0)
    {
        //Interaction_SetInteger
        //When flexButton_AmpsDigit_0 clicked call virtual function
        //Call setIntegerToUpdate
        setIntegerToUpdate();
    }
    if (&src == &flexButton_AmpsDigit_1)
    {
        //Interaction_SetTenths
        //When flexButton_AmpsDigit_1 clicked call virtual function
        //Call setTenthsToUpdate
        setTenthsToUpdate();
    }
    if (&src == &flexButton_AmpsDigit_2)
    {
        //Interaction_SetHundredths
        //When flexButton_AmpsDigit_2 clicked call virtual function
        //Call setHundredthsToUpdate
        setHundredthsToUpdate();
    }
    if (&src == &flexButton_AmpsDigit_3)
    {
        //Interaction_SetThousandths
        //When flexButton_AmpsDigit_3 clicked call virtual function
        //Call setThousandthsToUpdate
        setThousandthsToUpdate();
    }
    if (&src == &flexButton_DigitUp)
    {
        //Interaction_DigitUp
        //When flexButton_DigitUp clicked call virtual function
        //Call incrementDigitUp
        incrementDigitUp();
    }
    if (&src == &flexButton_DigitDown)
    {
        //Interaction_DigitDown
        //When flexButton_DigitDown clicked call virtual function
        //Call incrementDigitDown
        incrementDigitDown();
    }
    if (&src == &flexButton_ResetMinMax)
    {
        //Interaction1
        //When flexButton_ResetMinMax clicked call virtual function
        //Call resetMinMaxCurrentLimits
        resetMinMaxCurrentLimits();
    }
}

void Screen_SetViewBase::radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &radioButton_EnableLimit)
    {
        //Interaction_EnableLimit
        //When radioButton_EnableLimit selected call virtual function
        //Call enableCurrentLimit
        enableCurrentLimit();
    }
}

void Screen_SetViewBase::radioButtonDeselectedCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &radioButton_EnableLimit)
    {
        //Interaction_DisableLimit
        //When radioButton_EnableLimit deselected call virtual function
        //Call disableCurrentLimit
        disableCurrentLimit();
    }
}

void Screen_SetViewBase::transitionBegins()
{
    //Interaction_UpdateSetScreen
    //When screen transition begins call virtual function
    //Call update_Screen_Set
    update_Screen_Set();
}
