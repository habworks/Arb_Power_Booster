/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN_MAINVIEWBASE_HPP
#define SCREEN_MAINVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen_main_screen/Screen_MainPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>

class Screen_MainViewBase : public touchgfx::View<Screen_MainPresenter>
{
public:
    Screen_MainViewBase();
    virtual ~Screen_MainViewBase();
    virtual void setupScreen();
    virtual void afterTransition();

    /*
     * Virtual Action Handlers
     */
    virtual void update_Screen_Main()
    {
        // Override and implement this function in Screen_Main
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image_Background;
    touchgfx::ScalableImage scalableImage_Config;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton_Config;
    touchgfx::Box box_CH2_Enable;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton_CH2_Enable;
    touchgfx::TextAreaWithOneWildcard textArea_CH2_CurrentSet;
    touchgfx::TextArea textArea_CH2_Enable;
    touchgfx::TextArea textArea_CH2_Set;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton_CH2_Set;
    touchgfx::TextArea textArea_CH2_InputZ;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton_CH2_InputZ;
    touchgfx::TextArea textArea_CH2_UnitsMin;
    touchgfx::TextAreaWithOneWildcard textArea_CH2_Amin;
    touchgfx::TextArea textArea_CH2_UnitsMax;
    touchgfx::TextAreaWithOneWildcard textArea2_CH2_Amax;
    touchgfx::TextArea textArea_CH2_UnitsRMS;
    touchgfx::TextAreaWithOneWildcard textArea_CH2_Arms;
    touchgfx::TextArea textArea_CH2;
    touchgfx::Line line1;
    touchgfx::PainterRGB565 line1Painter;
    touchgfx::TextAreaWithOneWildcard textArea_CH1_CurrentSet;
    touchgfx::Box box_CH1_Enable;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton_CH1_Enable;
    touchgfx::TextArea textArea_CH1_Enable;
    touchgfx::TextArea textArea_CH1_Set;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton_CH1_Set;
    touchgfx::TextArea textArea_CH1_InputZ;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton_CH1_InputZ;
    touchgfx::TextArea textArea_CH1_UnitsMin;
    touchgfx::TextAreaWithOneWildcard textArea_CH1_Amin;
    touchgfx::TextArea textArea_CH1_UnitsMax;
    touchgfx::TextAreaWithOneWildcard textArea2_CH1_Amax;
    touchgfx::TextArea textArea_CH1_UnitsRMS;
    touchgfx::TextAreaWithOneWildcard textArea_CH1_Arms;
    touchgfx::TextArea textArea_CH1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA_CH2_CURRENTSET_SIZE = 15;
    touchgfx::Unicode::UnicodeChar textArea_CH2_CurrentSetBuffer[TEXTAREA_CH2_CURRENTSET_SIZE];
    static const uint16_t TEXTAREA_CH2_AMIN_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_CH2_AminBuffer[TEXTAREA_CH2_AMIN_SIZE];
    static const uint16_t TEXTAREA2_CH2_AMAX_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea2_CH2_AmaxBuffer[TEXTAREA2_CH2_AMAX_SIZE];
    static const uint16_t TEXTAREA_CH2_ARMS_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_CH2_ArmsBuffer[TEXTAREA_CH2_ARMS_SIZE];
    static const uint16_t TEXTAREA_CH1_CURRENTSET_SIZE = 15;
    touchgfx::Unicode::UnicodeChar textArea_CH1_CurrentSetBuffer[TEXTAREA_CH1_CURRENTSET_SIZE];
    static const uint16_t TEXTAREA_CH1_AMIN_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_CH1_AminBuffer[TEXTAREA_CH1_AMIN_SIZE];
    static const uint16_t TEXTAREA2_CH1_AMAX_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea2_CH1_AmaxBuffer[TEXTAREA2_CH1_AMAX_SIZE];
    static const uint16_t TEXTAREA_CH1_ARMS_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_CH1_ArmsBuffer[TEXTAREA_CH1_ARMS_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen_MainViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // SCREEN_MAINVIEWBASE_HPP
