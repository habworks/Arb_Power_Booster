/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN_CONFIGVIEWBASE_HPP
#define SCREEN_CONFIGVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen_config_screen/Screen_ConfigPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class Screen_ConfigViewBase : public touchgfx::View<Screen_ConfigPresenter>
{
public:
    Screen_ConfigViewBase();
    virtual ~Screen_ConfigViewBase();
    virtual void setupScreen();
    virtual void transitionBegins();

    /*
     * Virtual Action Handlers
     */
    virtual void update_Screen_Config()
    {
        // Override and implement this function in Screen_Config
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::TextAreaWithOneWildcard textArea_SystemTempMonitor;
    touchgfx::TextAreaWithOneWildcard textArea_System3V3Monitor;
    touchgfx::TextArea textArea_SystemTemp;
    touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton_SystemReset;
    touchgfx::TextArea textArea_IMR_URL;
    touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  flexButton_Home;
    touchgfx::TextAreaWithOneWildcard textArea_SystemStatusMsg;
    touchgfx::TextArea textArea_SystemStatus;
    touchgfx::TextAreaWithOneWildcard textArea_NegSupplyMonitor;
    touchgfx::TextArea textArea_NegSupply;
    touchgfx::TextArea textArea_System3V3;
    touchgfx::TextAreaWithOneWildcard textArea_PosSupplyMonitor;
    touchgfx::TextArea textArea_PosSupply;
    touchgfx::TextAreaWithOneWildcard textArea_FW_Rev;
    touchgfx::TextAreaWithOneWildcard textArea_HW_Rev;
    touchgfx::TextArea textArea_TitleConfig;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA_SYSTEMTEMPMONITOR_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_SystemTempMonitorBuffer[TEXTAREA_SYSTEMTEMPMONITOR_SIZE];
    static const uint16_t TEXTAREA_SYSTEM3V3MONITOR_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_System3V3MonitorBuffer[TEXTAREA_SYSTEM3V3MONITOR_SIZE];
    static const uint16_t TEXTAREA_SYSTEMSTATUSMSG_SIZE = 25;
    touchgfx::Unicode::UnicodeChar textArea_SystemStatusMsgBuffer[TEXTAREA_SYSTEMSTATUSMSG_SIZE];
    static const uint16_t TEXTAREA_NEGSUPPLYMONITOR_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_NegSupplyMonitorBuffer[TEXTAREA_NEGSUPPLYMONITOR_SIZE];
    static const uint16_t TEXTAREA_POSSUPPLYMONITOR_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_PosSupplyMonitorBuffer[TEXTAREA_POSSUPPLYMONITOR_SIZE];
    static const uint16_t TEXTAREA_FW_REV_SIZE = 8;
    touchgfx::Unicode::UnicodeChar textArea_FW_RevBuffer[TEXTAREA_FW_REV_SIZE];
    static const uint16_t TEXTAREA_HW_REV_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textArea_HW_RevBuffer[TEXTAREA_HW_REV_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen_ConfigViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // SCREEN_CONFIGVIEWBASE_HPP
